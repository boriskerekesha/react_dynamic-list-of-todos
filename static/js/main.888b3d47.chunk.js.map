{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setShowTodoModal","setSelectedTodo","className","map","todo","id","completed","classNames","title","type","onClick","handleClick","TodoFilter","filterBy","setFilterBy","setValue","applySearch","value","onChange","event","target","placeholder","style","pointerEvents","length","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","initialTodo","useState","user","setUser","useEffect","userId","response","name","email","Object","keys","href","App","setTodos","showTodoModal","search","setSearch","useCallback","debounce","isVisibleLoader","setIsVisibleLoader","visibleTodos","filter","useMemo","toLocaleLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.888b3d47.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo;\n  setShowTodoModal: React.Dispatch<React.SetStateAction<boolean>>,\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo>>,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setShowTodoModal,\n  setSelectedTodo,\n}) => {\n  const handleClick = (todo: Todo) => {\n    if (selectedTodo !== todo) {\n      setSelectedTodo(todo);\n    }\n\n    setShowTodoModal(true);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  `has-text-${todo.completed ? 'success' : 'danger'}`,\n                )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    {\n                      'fa-eye': selectedTodo.id !== todo.id,\n                      'fa-eye-slash': selectedTodo.id === todo.id,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { DebouncedFunc } from 'lodash';\n\ntype Props = {\n  filterBy: string;\n  setFilterBy: React.Dispatch<React.SetStateAction<string>>,\n  setValue: React.Dispatch<React.SetStateAction<string>>,\n  applySearch: DebouncedFunc<React.Dispatch<React.SetStateAction<string>>>,\n  value: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterBy,\n  setFilterBy,\n  setValue,\n  applySearch,\n  value,\n}) => {\n  const handleChangeSelect = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => setFilterBy(event.target.value);\n\n  const handleChangeInput = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setValue(event.target.value);\n    applySearch(event.target.value);\n  };\n\n  const handleClearSearchButton = () => setValue('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={handleChangeSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={value}\n          onChange={handleChangeInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {value.length > 0 && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearSearchButton}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo>>,\n  initialTodo: Todo;\n  setShowTodoModal: React.Dispatch<React.SetStateAction<boolean>>,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n  initialTodo,\n  setShowTodoModal,\n}) => {\n  const initialUser = {} as User;\n  const [user, setUser] = useState(initialUser);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(response => setUser(response));\n  }, [selectedTodo]);\n\n  const handleClickDelete = () => {\n    setShowTodoModal(false);\n    setSelectedTodo(initialTodo);\n  };\n\n  const { name, email } = user;\n  const { completed, id, title } = selectedTodo;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {Object.keys(user).length === 0 ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClickDelete}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n              {' by '}\n              <a href={`mailto:${email}`}>\n                {name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { debounce } from 'lodash';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const initialTodos = [] as Todo[];\n  const initialTodo = {} as Todo;\n  const [filterBy, setFilterBy] = useState('all');\n  const [todos, setTodos] = useState(initialTodos);\n  const [value, setValue] = useState('');\n  const [showTodoModal, setShowTodoModal] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState(initialTodo);\n  const [search, setSearch] = useState('');\n  const applySearch = useCallback(\n    debounce(setSearch, 500),\n    [],\n  );\n  const [isVisibleLoader, setIsVisibleLoader] = useState(true);\n\n  useEffect(() => {\n    getTodos()\n      .then(response => setTodos(response))\n      .then(() => setIsVisibleLoader(false));\n  }, []);\n\n  let visibleTodos = todos.filter(todo => {\n    switch (filterBy) {\n      case 'all':\n        return true;\n      case 'completed':\n        return todo.completed;\n      case 'active':\n        return !todo.completed;\n      default:\n        return false;\n    }\n  });\n\n  useMemo(() => {\n    visibleTodos = visibleTodos\n      .filter(todo => todo.title\n        .toLocaleLowerCase()\n        .includes(search.toLocaleLowerCase()));\n  }, [search]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterBy={setFilterBy}\n                filterBy={filterBy}\n                setValue={setValue}\n                applySearch={applySearch}\n                value={value}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isVisibleLoader && (<Loader />)}\n              {todos.length > 0 && (\n                <TodoList\n                  todos={visibleTodos}\n                  setShowTodoModal={setShowTodoModal}\n                  setSelectedTodo={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showTodoModal && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          initialTodo={initialTodo}\n          setSelectedTodo={setSelectedTodo}\n          setShowTodoModal={setShowTodoModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}